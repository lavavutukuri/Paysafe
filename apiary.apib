FORMAT: 1A
HOST: https://api.test.paysafe.com/

# Payment Hub 

## Getting Started

Paysafe Payment Hub encapsulates integration with multiple payment methods into a single API 
that simplifies the development effort for a new payment method integration to bare minimum 
or even none in certain cases.

The following payment methods are supported

- Card Payments
- Skrill
- Neteller
- PaysafeCard
- PaysafeCash
- Guaranteed ACH
- Sightline Prepaid Cards


# Data Structures

## PaymentHandleRequest (object)

+  id: `length <=36`(required) - This is the ID returned in the response. This ID can be used for future associated requests, e,g., Payments.
+ merchantRefNum: `length <= 100` - This is the merchant reference number created by the merchant and submitted as part of the request. It must be unique for each request.
+ status (enum) - This is the status of the transaction request.
    + RECEIVED - Our system has received the request and is waiting for the downstream processor’s response. 
    + PAYABLE - The merchant can proceed with payments post request.
    + PENDING - The transaction has been placed on hold due to risk considerations.
    + FAILED - The transaction failed due to either an error or being declined. 
    + CANCELLED - The authorization request has been fully reversed.
    + EXPIRED - The payment handle got expired due to merchant not proceeding with transaction.
+ usage (enum) - Payment handle usage - whether single of multi use
    + SINGLE_USE - The payment handle can be used only once for transaction, it gets expired after due time.
    + MULTI_USE - The payment handle can be used multiple times like recurring/subscription payments.
+ paymentType (enum) - The related payment Type/Channel/Method associated with this handle
    + CARD
    + SKRILL
    + NETELLER
    + PAYSAFE_CASH
    + PAYSAFE_CARD
+ action (enum) - The associated action that needs to be done by merchant for this handle
    + NONE
    + REDIRECT
    + VERIFY_CODE
+ executionMode (enum) - The type of execution of the payment
    + ASYNCHRONOUS
    + SYNCHRONOUS
+ storedCredential (enum) - The storedCredential object is used to identify authorization requests that use stored credentials for a consumer, in order to improve authorization rates and reduce fraud. Stored credentials can be used in two cases:
Using a payment token – An authorization request that uses a paymentToken from the Customer Vault API.           
Using a card number – An authorization request that uses a credit card number stored by the merchant
    + type (enum) - This specifies the type of request being made. Possible values are: 
        + ADHOC – Ad hoc consumer-initiated request.
        + TOPUP – Unscheduled merchant-iniitated request when a consumer balance is below a set limit.
        + RECURRING – Scheduled, merchant-initiated recurring request.
    + occurrence (enum) - This specifies whether this stored credential request is initial or recurring. Possible values are: 
        + INITIAL – Used when this is the first time the consumer uses this credit card.
        + SUBSEQUENT – Used when the consumer uses this credit card for subsquent requests.
+ amount: 100 - Max =99999999999 This is the amount of the request, in minor units.
+ currencyCode: CAD - Max = 3 This is the currency of the merchant account, e.g., USD or CAD, returned in the request response.
+ paymentHandleToken - The handle token generated by our system which will be used by merchants for payments post later.
+ card (object) - These are the details of the card used for the request.
    + paymentToken - Max = 80 If the payment token is provided, no other card information is necessary.
    + cardNum - Min = 8,Max = 20 This is the card number used for the request.
    + type (enum) - This is type of card used for the request.
        - AM – American Express
        - DC – Diners Club
        - DI – Discover
        - JC – JCB
        - MC – MasterCard
        - MD – Maestro
        - SF – Swiff
        - SO – Solo
        - VI – Visa
        - VD – Visa Debit
        - VE – Visa Electron
    + lastDigits - Size=4 This is the last four digits of the card used for the request.
    + cardExpiry - This is the card's expiry date.
        + month - length=2 This is the card expiry month.
        + year - length=4 This is the card expiry year.
    + cvv - Min = 3,Max = 4 This is the 3- or 4-digit security code that appears on the card following the card number.
    + track1 - This is Track 1 information read from the card's magnetic stripe.
    + track2 - This is Track 2 information read from the card's magnetic stripe.
+ Customer Profile - Customer information is mandatory if savePaymentInstrument is set to true
 - id: Gt56fR6 - Id is enough, and if id is not present, customer details like firstName, lastName, email ... has to be provided,if id is specified, the additional details provided will be overwritten to existing customer profile?
 - status - The status of customer in the system, returned in the response.
 - merchantCustomerId - length = 255 This is the reference number for the customer created by the merchant and submitted as part of the request. It must be unique for each customer.
 - firstName: test - length<=80 This is the customer’s first name.
 - lastname: user - length<=80 This is the customer's last name.
 - locale - Customer's locale preference
 - dateOfBirth: year,month,day(array)
 - email: john.smith@email.com - length<=255 This is the customer's email address.
 - phone:12345678
 - mobile - mobile
 - gender - gender
 - nationality - indian
+ billingAddress - These are the billing details for the request.
 - street: 100 queen - length<=50 This is the first line of the street address in the billing address.
 - street2: unit 201 - length<=50 This is the second line of the street address in the billing address, if required (e.g., apartment number).
 - city: Toronto - length<=40 This is the city in the billing address.
 - zip: MSH 2N2 - length<=10 This is the postal/zip code in the billing address.
 - country: CA - Size = 2
 - state: ON - length<=40 Use the 2-character state or province codes for Canada or the United States.
 - phone - length<=40 This is the customer's telephone number.
+ merchantDescriptor - This is the merchant descriptor that will be displayed on the customer's card statement.
    + dynamicDescriptor: Online Store - This is a merchant descriptor that will be displayed on a customer’s card statement. Length = 20
    + phone: 12345678 - This is the merchant’s phone number, which will be appended to the merchant descriptor on a customer’s card statement. Length = 13
+ links (object) - Specifies all links
    + type (enum)
        + REDIRECT - Merchant needs to do redirect to this url
        + RETURN_SUCCESS - Paysafe will return to this merchant url post successful payment
        + RETURN_FAILURE - Paysafe will return to this merchant url post if payment is failed
    + url - The actual URL
    + method - The http method
+ customerIp - length<=39 This is the customer's IP address.
+ paymentHandleIdFrom - This is the existing payment handle id, from which payment instrument and profile details has to be fetched. We can only use Payment handles whose usage is set to LOOKUP for this. length<=36
+ timeToLiveSeconds: 1212121212 (number) - This is the period of time the single-use token is valid before expiration, in seconds, returned in the response.(Long)

## OriginalCreditResponse (object)
+ id: 25f6dadf-176a-415f-95c9-6ff39ff697ba - Read Only, length<=36    This is the ID returned in the response. This ID can be used for future associated requests, e,g., Refunds.
+ merchantRefNum: P1234 (required) - length<=255 This is the merchant reference number created by the merchant and submitted as part of the request.
+ amount: 100 (required) - max=99999999999 This is the amount of the request, in minor units.
+ card (object) - These are the details of the card used for the request.Only one card object can be included in the request.
    + paymentToken (required) - Max = 80 This is the payment token representing the card.
+ card (object) - These are the details of the card used for the request.Only one card object can be included in the request.   
    + cardNum (): 4111111111111111 (required) - length=8-20 This is the card number used for the request.
        + cardExpiry (required) - This is the card's expiry date.
        + month:12 (number, required) - This is the card expiry month. length=2
        + year:2020 (number, required) - This is the card expiry year. length=4
    + cvv - This is the 3- or 4-digit security code that appears on the card following the card number.
    + track1 - This is Track 1 information read from the card's magnetic stripe.
    + track2 - This is Track 2 information read from the card's magnetic stripe.`
+ dupCheck: true (boolean) - This validates that this request is not a duplicate. A request is considered a duplicate if the merchantRefNum has already been used in a previous request within the past 90 days.
+ description: Purchase Credit - This is a description of the transaction, provided by the merchant. length<=255
+ customerIp: 204.91.0.12 -This is the customer's IP address.length<=39
+ accountId: 123456789 (optional) -This is the merchant account number.
+ profile - These are some details about the customer.
 - firstName: test -  This is the customer’s first name. length<=80
 - lastname: user -  This is the customer's last name. length<=80
 - email: john.smith@email.com -  This is the customer's email address. length<=255
+ billingAddress - These are the billing details for the request.
 - street: 100 queen - length<=50 This is the first line of the street address in the billing address.
 - street2: unit 201 - length<=50 This is the second line of the street address in the billing address, if required (e.g., apartment number).
 - city: Toronto - This is the city in the billing address. length<=40
 - zip: MSH 2N2 - This is the postal/zip code in the billing address. length<=10
 - country: CA - Size = 2
 - state: ON - Use the 2-character state or province codes for Canada or the United States. length<=40
 - phone - This is the customer's telephone number. length<=40

## RefundResponse (object)
+ id: 25f6dadf-176a-415f-95c9-6ff39ff697ba - Read Only, length<=36    This is the ID returned in the response. This ID can be used for future associated requests, e,g., Refunds.
+ merchantRefNum: P1234 (required) - length<=255 This is the merchant reference number created by the merchant and submitted as part of the request.
+ amount: 100 (required) - max=99999999999 This is the amount of the request, in minor units.
+ dupCheck: true (boolean) - This validates that this request is not a duplicate. A request is considered a duplicate if the merchantRefNum has already been used in a previous request within the past 90 days.
+ description: Purchase Credit - This is a description of the transaction, provided by the merchant. length<=255
+ customerIp: 204.91.0.12 -This is the customer's IP address.length<=39
+ accountId: 123456789 (optional) -This is the merchant account number.
+ status (enum) - This is the status of the transaction request.
    + RECEIVED 
    + COMPLETED 
    + PENDING 
    + FAILED 
    + CANCELLED

## SettlementResponse (object)
+ id: 25f6dadf-176a-415f-95c9-6ff39ff697ba - Read Only, length<=36    This is the ID returned in the response. This ID can be used for future associated requests, e,g., Refunds.
+ merchantRefNum: P1234 (required) - length<=255 This is the merchant reference number created by the merchant and submitted as part of the request.
+ amount: 100 (required) - max=99999999999 This is the amount of the request, in minor units.
+ dupCheck: true (boolean) - This validates that this request is not a duplicate. A request is considered a duplicate if the merchantRefNum has already been used in a previous request within the past 90 days.
+ description: Purchase Credit - This is a description of the transaction, provided by the merchant. length<=255
+ customerIp: 204.91.0.12 -This is the customer's IP address.length<=39
+ accountId: 123456789 (optional) -This is the merchant account number.
+ status (enum) - This is the status of the transaction request.
    + RECEIVED 
    + COMPLETED 
    + PENDING 
    + FAILED 
    + CANCELLED    
+ availableToRefund: 25 - This is the amount of of the Authorization remaining to Refund, in minor units.Read Only, max=99999999999

# Group Metadata APIs

## Fetch Available Payment Methods [/v1/paymentmethods]

### Payment Methods [POST]

This API will provide all the available payment methods for the Merchant. Merchant can have his own configuration defined at Paysafe side, which will be used to filter the payment methods based on amount and currency.

+ Request (application/json)

    + Headers

            Authorization: "Basic YOUR-BASE64-ENCODED-API-KEY"
    
    + Body

            {
                "currency" : "CAD",
                "amount" : "200"
            } 

+ Response 200 (application/json)

    + Body

            {
                "currency" : "CAD",
                "paymentMethods": [
                {
                  "name": "Card",
                  "type": "scheme",
                  "operationsSupported" : ["payment", "settlement", "refund"],
                  "details": [
                    {
                      "key": "cardNumber",
                      "type": "number"
                    },
                    {
                      "key": "securityCode",
                      "type": "number"
                    },
                    {
                      "key": "encryptedExpiryMonth",
                      "type": "number"
                    },
                    {
                      "key": "encryptedExpiryYear",
                      "type": "number"
                    },
                    {
                      "key": "holderName",
                      "optional": "true",
                      "type": "text"
                    }
                  ]
                },
                {
                  "name" : "Skrill",
                  "type" : "wallet",
                  "operationsSupported" : ["payment", "settlement", "refund"]
                },
                {
                  "name" : "Neteller",
                  "type" : "wallet",
                  "operationsSupported" : ["payment", "settlement", "refund"]
                },
                {
                  "name" : "Paysafecash",
                  "type" : "wallet",
                  "operationsSupported" : ["payment", "settlement", "refund"]
                },
                {
                  "name" : "Paysafecard",
                  "type" : "wallet",
                  "operationsSupported" : ["payment", "settlement", "refund"]
                }
              ]
            }
            

# Group Payment Handle APIs

## Payment Handle [/v1/paymenthandles]

PaymentHandle is a contract of a Payment, which contains customer's payment instrument and other details like amount, payment method, customer profile etc. This accepts a variety of payment methods with a single API. 
<br>
Payment Handle has its own states. Payment can be initiated on this Payment Handle only if the status is PAYABLE.

### Create Payment Handle [POST]

Creates a new Payment Handle object.

+ Request Card payment handle creation without 3DS (application/json)

    + Headers

            Authorization: "Basic YOUR-BASE64-ENCODED-API-KEY"
    
    + Body

            {
                "amount": "100",
                "currency": "CAD",
                "customerIp": "172.0.0.1",
                "customer": {
                    "firstName": "John",
                    "lastName": "Smith",
                    "dateOfBirth": {
                        "year": 1981,
                        "month": 10,
                        "day": 24
                    },
                    "email": "john.smith@email.com"
                },
                "billingAddress": {
                    "nickName": "Home",
                    "street": "100 Queen",
                    "street2": "Unit 200",
                    "city": "Toronto",
                    "zip": "M5H 2N2",
                    "country": "CA",
                    "state": "ON"
                },
                "paymentMethod": "CARD",
                "card": {
                    "holderName": "John Smith",
                    "cardNum": "4111111111111119",
                    "cardExpiry": {
                        "month": "12",
                        "year": "2018"
                    },
                    "cvv" : "123"   
                },
                "links": [ 
              {
                 "type" : "RETURN_SUCCESS",
                 "url" : "https://usgaminggamblig/payment/return/succuss",
                 "method" : "GET"
                }
            ]
            }

+ Response 200 (application/json)

    + Body

            {
                "id": "ph_TGFVRedfghy875redfghnEDDDD",
                "amount": "100",
                "currency": "CAD",
                "action": "NONE",
                "status": "PAYABLE",
                "customerIp": "172.0.0.1",
                "paymentHandleToken": "xfddsfshkhkhwqeq324",
                "timeToLiveSeconds":"899",
                "customer": {
                    "firstName": "John",
                    "lastName": "Smith",
                    "dateOfBirth": {
                        "year": 1981,
                        "month": 10,
                        "day": 24
                    },
                    "email": "john.smith@email.com"
                },
                "billingAddress": {
                    "nickName": "Home",
                    "street": "100 Queen",
                    "street2": "Unit 200",
                    "city": "Toronto",
                    "zip": "M5H 2N2",
                    "country": "CA",
                    "state": "ON"
                },
                "paymentMethod": "CARD",
                "savePaymentInstrument": "false", 
                "type": "SINGLE_USE",
                "card": {
                    "holderName": "John Smith",
                    "last4Digits": "1119",
                    "cardExpiry": {
                        "month": "12",
                        "year": "2018"
                    }
                },
                "links": [ 
              {
                 "type" : "RETURN_SUCCESS",
                 "url" : "https://usgaminggamblig/payment/return/succuss",
                 "method" : "GET"
                }
            ]          
            }

+ Request CARD Payment Handle with 3DS enabled (application/json)

    + Headers

            Authorization: "Basic YOUR-BASE64-ENCODED-API-KEY"
            
    + Attributes (PaymentHandleRequest)
    
    
    + Body

            {
              "amount": "100",
              "currency": "CAD",
              "customerIp": "172.0.0.1",
              "customer": {
                    "firstName": "John",
                    "lastName": "Smith",
                    "dateOfBirth": {
                        "year": 1981,
                        "month": 10,
                        "day": 24
                    },
                    "email": "john.smith@email.com"
                },
              "billingAddress": {
                "nickName": "Home",
                "street": "100 Queen",
                "street2": "Unit 200",
                "city": "Toronto",
                "zip": "M5H 2N2",
                "country": "CA",
                "state": "ON"
              },
              "paymentMethod": "CARD",
              "savePaymentInstrument": "false",
              "card": {
                "holderName": "John Smith",
                "cardNum": "4000000000000008",
                "cardExpiry": {
                  "month": "12",
                  "year": "2018"
                },
                "cvv" : "123"
              },
              "links": [ 
              {
                 "type" : "RETURN_SUCCESS",
                 "url" : "https://usgaminggamblig/payment/return/succuss",
                 "method" : "GET"
                }
            ]
            }

+ Response 200 (application/json)

    + Body

            {
              "id": "ph_TGFVRedfghy875redfghnED",
              "amount": "100",
              "currency": "CAD",
              "customerIp": "172.0.0.1",
              "action": "REDIRECT",
              "status": "INITIATED",
              "timeToLiveSeconds":"899",
              "paymentHandleToken": "xfddsfshkhkhwqeq324",
              "customer": {
                "firstName": "John",
                "lastName": "Smith",
                "dateOfBirth": {
                  "year": 1981,
                  "month": 10,
                  "day": 24
                },
                "email": "john.smith@email.com"
              },
              "billingAddress": {
                "nickName": "Home",
                "street": "100 Queen",
                "street2": "Unit 200",
                "city": "Toronto",
                "zip": "M5H 2N2",
                "country": "CA",
                "state": "ON"
              },
              "paymentMethod": "CARD",
              "savePaymentInstrument": "false",
              "type": "SINGLE_USE",
              "card": {
                "holderName": "John Smith",
                "last4Digits": "0008",
                "cardExpiry": {
                  "month": "12",
                  "year": "2018"
                }
              },
              "links": [ 
              {
                 "type" : "RETURN_SUCCESS",
                 "url" : "https://usgaminggamblig/payment/return/succuss",
                 "method" : "GET"
                },
              {
                 "type" : "REDIRECT",
                 "url" : "https://pay.qa.netbanx.com/emulator/test_acs",
                 "method" : "GET"
                }
            ]
            }
            
            
+ Request Skrill Payment Handle creation (application/json)

    + Headers

            Authorization: "Basic YOUR-BASE64-ENCODED-API-KEY"
    
    + Body

            {
                "merchantRefNum":"123sdfsdfsdf",
                "amount": "100",
                "customer": {
                    "firstName": "John",
                    "lastName": "Smith",
                    "dateOfBirth": {
                        "year": 1981,
                        "month": 10,
                        "day": 24
                    },
                    "email": "john.smith@email.com"
                },
                "billingAddress": {
                    "nickName": "Home",
                    "street": "100 Queen",
                    "street2": "Unit 200",
                    "city": "Toronto",
                    "zip": "M5H 2N2",
                    "country": "CA",
                    "state": "ON",
                    "phone": "345345435"
                },
                "paymentType": "SKRILL",
                "currency": "USD",
                "skrill": {
                    "consumerId": "john.doe@email.com",
                    "recipientDescription":"logo_url_alt_text",
                    "language":"EN",
                    "logoUrl":"http://www.paysafe.com/icon.jpg",
                    "detail1Description":"Details 1 description",
                    "detail1Text":"Details 1 text"
                },
                "links": [
                 {
                 "type" : "RETURN_SUCCESS",
                 "url" : "https://usgaminggamblig/payment/return/succuss",
                 "method" : "GET"
                }
                ]
            }

+ Response 200 (application/json)

    + Body

            {
                "id": "ph_TGFVRedfghy875redfghnED",
                "status": "INITIATED",
                "amount": "100",
                "merchantRefNum":"123sdfsdfsdf",
                "paymentHandleToken": "xfddsfshkhkhwqeq324",
                "timeToLiveSeconds":"899",
                "customer": {
                    "firstName": "John",
                    "lastName": "Smith",
                    "dateOfBirth": {
                        "year": 1981,
                        "month": 10,
                        "day": 24
                    },
                    "email": "john.smith@email.com"
                },
                "billingAddress": {
                    "nickName": "Home",
                    "street": "100 Queen",
                    "street2": "Unit 200",
                    "city": "Toronto",
                    "zip": "M5H 2N2",
                    "country": "CA",
                    "state": "ON",
                    "phone": "345345435"
                },
                "paymentType": "SKRILL",
                "usage": "SINGLE_USE",
                "action": "REDIRECT",
                "executionMode": "ASYNCHRONOUS",
                "links": [
                 {
                 "type" : "RETURN_SUCCESS",
                 "url" : "https://usgaminggamblig/payment/return/succuss",
                 "method" : "GET"
                },
                 {
                 "type" : "REDIRECT",
                 "url" : "https://www.skrill.com",
                 "method" : "GET"
                }
                ],
                "skrill": {
                    "consumerId": "john.doe@email.com",
                    "recipientDescription":"logo_url_alt_text",
                    "language":"EN",
                    "logoUrl":"http://www.paysafe.com/icon.jpg",
                    "detail1Description":"Details 1 description",
                    "detail1Text":"Details 1 text"
                }
            }
            
+ Request Neteller Payment Handle creation (application/json)

    + Headers

            Authorization: "Basic YOUR-BASE64-ENCODED-API-KEY"
    
    + Body

            {
                "merchantRefNum":"123sdfsdfsdf",
                "amount": "100",
                "customer": {
                    "firstName": "John",
                    "lastName": "Smith",
                    "dateOfBirth": {
                        "year": 1981,
                        "month": 10,
                        "day": 24
                    },
                    "email": "john.smith@email.com"
                },
                "billingAddress": {
                    "nickName": "Home",
                    "street": "100 Queen",
                    "street2": "Unit 200",
                    "city": "Toronto",
                    "zip": "M5H 2N2",
                    "country": "CA",
                    "state": "ON",
                    "phone": "345345435"
                },
                "paymentType": "NETELLER",
                "currency": "USD",
                "neteller": {
                    "consumerId":"neteller.account@example.org",
                    "consumerVerificationId":"123456",
                    "recipientDescription":"logo_url_alt_text",
                    "language":"EN",
                    "logoUrl":"http://www.paysafe.com/icon.jpg",
                    "detail1Description":"Details 1 description",
                    "detail1Text":"Details 1 text"
                },
                "links": [
                {
                 "type" : "RETURN_SUCCESS",
                 "url" : "https://usgaminggamblig/payment/return/succuss",
                 "method" : "GET"
                }
                ]
            }

+ Response 200 (application/json)

    + Body

            {
                "id": "ph_TGFVRedfghy875redfghn",
                "status": "INITIATED",
                "amount": "100",
                "merchantRefNum":"123sdfsdfsdf",
                "timeToLiveSeconds":"899",
                "customer": {
                    "firstName": "John",
                    "lastName": "Smith",
                    "dateOfBirth": {
                        "year": 1981,
                        "month": 10,
                        "day": 24
                    },
                    "email": "john.smith@email.com"
                },
                "billingAddress": {
                    "id": "12345",
                    "status": "PAYABLE",
                    "nickName": "Home",
                    "street": "100 Queen",
                    "street2": "Unit 200",
                    "city": "Toronto",
                    "zip": "M5H 2N2",
                    "country": "CA",
                    "state": "ON",
                    "phone": "345345435"
                },
                "paymentType": "NETELLER",
                "usage": "SINGLE_USE",
                "action": "REDIRECT",
                "executionMode": "SYNCHRONOUS",
                "links": [ 
                 {
                 "type" : "REDIRECT",
                 "url" : "https://www.neteller.com",
                 "method" : "GET"
                },
                {
                 "type" : "RETURN_SUCCESS",
                 "url" : "https://usgaminggamblig/payment/return/succuss",
                 "method" : "GET"
                }
                ],
                 "currency": "USD",
                 "paymentHandleToken": "AJSASGA",
                 "neteller": {
                    "consumerId":"neteller.account@example.org",
                    "consumerVerificationId":"123456",
                    "recipientDescription":"logo_url_alt_text",
                    "language":"EN",
                    "logoUrl":"http://www.paysafe.com/icon.jpg",
                    "detail1Description":"Details 1 description",
                    "detail1Text":"Details 1 text"
                }
            }
+ Request PaysafeCard Payment Handle creation (application/json)

    + Headers

            Authorization: "Basic YOUR-BASE64-ENCODED-API-KEY"
    
    + Body

            {
                "merchantRefNum":"123sdfsdfsdf",
                "amount": "100",
                "customer": {
                    "firstName": "John",
                    "lastName": "Smith",
                    "dateOfBirth": {
                        "year": 1981,
                        "month": 10,
                        "day": 24
                    },
                    "email": "john.smith@email.com"
                },
                "billingAddress": {
                    "nickName": "Home",
                    "street": "100 Queen",
                    "street2": "Unit 200",
                    "city": "Toronto",
                    "zip": "M5H 2N2",
                    "country": "CA",
                    "state": "ON",
                    "phone": "345345435"
                },
                "paymentType": "PAYSAFE_CARD",
                "currency": "USD",
                "paysafecard": {
                    "consumerId": "merchantclientid",
                    "minAgeRestriction": 18,
                    "kycLevelRestriction": "SIMPLE",
                    "countryRestriction": "DE"
                 },
                 "links": 
                 [{
                 "type" : "RETURN_SUCCESS",
                 "url" : "https://usgaminggamblig/payment/return/succuss",
                 "method" : "GET"
                }]
            }

+ Response 200 (application/json)

    + Body

            {
                "id": "ph_TGFVRedfghy875redfghnED",
                "status": "INITIATED",
                "amount": "100",
                "merchantRefNum":"123sdfsdfsdf",
                "paymentHandleToken": "adsmgasgdqge726hd",
                "timeToLiveSeconds":"899",
                "customer": {
                    "firstName": "John",
                    "lastName": "Smith",
                    "dateOfBirth": {
                        "year": 1981,
                        "month": 10,
                        "day": 24
                    },
                    "email": "john.smith@email.com"
                },
                "billingAddress": {
                    "nickName": "Home",
                    "street": "100 Queen",
                    "street2": "Unit 200",
                    "city": "Toronto",
                    "zip": "M5H 2N2",
                    "country": "CA",
                    "state": "ON",
                    "phone": "345345435"
                },
                "paymentType": "PAYSAFE_CARD",
                "usage": "SINGLE_USE",
                "action": "REDIRECT",
                "executionMode": "ASYNCHRONOUS",
                "links": 
                 [{
                 "type" : "REDIRECT",
                 "url" : "https://www.paysafecard.com",
                 "method" : "GET"
                },{
                 "type" : "RETURN_SUCCESS",
                 "url" : "https://usgaminggamblig/payment/return/succuss",
                 "method" : "GET"
                }],
                 "currency": "USD",
                "paysafecard": {
                    "consumerId": "merchantclientid",
                    "minAgeRestriction": 18,
                    "kycLevelRestriction": "SIMPLE",
                    "countryRestriction": "DE"
                 
                }
            }
            
+ Request PaysafeCash Payment Handle creation (application/json)

    + Headers

            Authorization: "Basic YOUR-BASE64-ENCODED-API-KEY"
    
    + Body

            {
                "merchantRefNum":"123sdfsdfsdf",
                "amount": "100",
                "customer": {
                    "firstName": "John",
                    "lastName": "Smith",
                    "dateOfBirth": {
                        "year": 1981,
                        "month": 10,
                        "day": 24
                    },
                    "email": "john.smith@email.com"
                },
                "billingAddress": {
                    "nickName": "Home",
                    "street": "100 Queen",
                    "street2": "Unit 200",
                    "city": "Toronto",
                    "zip": "M5H 2N2",
                    "country": "CA",
                    "state": "ON",
                    "phone": "345345435"
                },
                "paymentType": "PAYSAFE_CASH",
                "currency": "USD",
                "paysafecash": {
                    "consumerId": "merchantclientid",
                    "minAgeRestriction": 18,
                    "kycLevelRestriction": "SIMPLE",
                    "countryRestriction": "DE"
                },
                "links": 
                 [{
                 "type" : "RETURN_SUCCESS",
                 "url" : "https://usgaminggamblig/payment/return/succuss",
                 "method" : "GET"
                }]
            }

+ Response 200 (application/json)

    + Body

            {
                "id": "ph_TGFVRedfghy875redfghnED",
                "status": "INITIATED",
                "amount": "100",
                "merchantRefNum":"123sdfsdfsdf",
                "timeToLiveSeconds":"899",
                "paymentHandleToken": "HSAFDYSFD",
                "customer": {
                    "firstName": "John",
                    "lastName": "Smith",
                    "dateOfBirth": {
                        "year": 1981,
                        "month": 10,
                        "day": 24
                    },
                    "email": "john.smith@email.com"
                },
                "billingAddress": {
                    "nickName": "Home",
                    "street": "100 Queen",
                    "street2": "Unit 200",
                    "city": "Toronto",
                    "zip": "M5H 2N2",
                    "country": "CA",
                    "state": "ON",
                    "phone": "345345435"
                },
                "paymentType": "PAYSAFE_CASH",
                "usage": "SINGLE_USE",
                "action": "REDIRECT",
                "executionMode": "ASYNCHRONOUS",
                "links": 
                 {
                 "type" : "REDIRECT",
                 "url" : "https://www.paysafecash.com",
                 "method" : "GET"
                },
                 "currency": "USD",
                "paysafecash": {
                    "consumerId": "merchantclientid",
                    "minAgeRestriction": 18,
                    "kycLevelRestriction": "SIMPLE",
                    "countryRestriction": "DE"
                },
                "links": 
                 [{
                 "type" : "REDIRECT",
                 "url" : "https://www.paysafecash.com",
                 "method" : "GET"
                },{
                 "type" : "RETURN_SUCCESS",
                 "url" : "https://usgaminggamblig/payment/return/succuss",
                 "method" : "GET"
                }]
            }
            
### Fetch Payment Handle [GET /v1/paymenthandles/f343d2bd-f6a6-4a6d-9534-96c0abd97649]

Fetch an existing payment handle object, using the unique payment handle ID returned during payment handle creation request.

+ Response 200 (application/json)

    + Body

            {
                "id": "f343d2bd-f6a6-4a6d-9534-96c0abd97649",
                "merchantRefNum": "13995817730005399",
                "status": "INITIATED",
                "usage": "SINGLE_USE",
                "paymentType": "CARD",
                "action": "REDIRECT",
                "executionMode": "SYNCHRONOUS",
                "amount": 1000,
                "currencyCode": "USD",
                "links": [
                    {
                    "type": "REDIRECT",
                    "url": "http://test.paysafe.com",
                    "method": "POST"
                },
                {
                "type": "RETURN_SUCCESS",
                "url": "http://merchant.com/success",
                 "method": "POST"
            }
            ],
                "customerIp": "10.10.12.64",
                "merchantDescriptor": {
                "dynamicDescriptor": "Casino slots payin"
             },
                "paymentHandleToken": "SCC54RTfi7x5sgjV",
                "billingAddress": {
                    "street": "Wall Street",
                    "street2": "NYSE",
                    "city": "New York",
                    "state": "NY",
                    "country": "US",
                    "zip": "12345"
            },
               "card": {
                "holderName": "John Smith",
                "last4Digits": "0008",
                "cardExpiry": {
                  "month": "12",
                  "year": "2018"
                }
              }
            }

### Fetch Payment Handle by Merchant Reference Number [GET /v1/paymenthandles?merchantRefNum=13995817730005389]

Fetch an existing payment handle object, using the merchant genereated unique id used during payment handle creation request.

+ Response 200 (application/json)

    + Body

            {
                "id": "f343d2bd-f6a6-4a6d-9534-96c0abd97649",
                "merchantRefNum": "13995817730005399",
                "status": "INITIATED",
                "usage": "SINGLE_USE",
                "paymentType": "CARD",
                "action": "REDIRECT",
                "executionMode": "SYNCHRONOUS",
                "amount": 1000,
                "currencyCode": "USD",
                "links": [
                    {
                    "type": "REDIRECT",
                    "url": "http://test.paysafe.com",
                    "method": "GET"
                },
                {
                "type": "RETURN_SUCCESS",
                "url": "http://merchant.com/success",
                 "method": "GET"
            }
            ],
                "customerIp": "10.10.12.64",
                "merchantDescriptor": {
                "dynamicDescriptor": "Casino slots payin"
             },
                "paymentHandleToken": "SCC54RTfi7x5sgjV",
                "billingAddress": {
                    "street": "Wall Street",
                    "street2": "NYSE",
                    "city": "New York",
                    "state": "NY",
                    "country": "US",
                    "zip": "12345"
            },
               "card": {
                "holderName": "John Smith",
                "last4Digits": "0008",
                "cardExpiry": {
                  "month": "12",
                  "year": "2018"
                }
              }
            }

# Group Payment APIs

## Payments [/v1/payments]

Payments API is useful for Merchant to authenticate the initialization of payment, which is done using Payment Handle. 
If Merchant doesn't authenticates the Payment Handle through the Payments API with in a timeline, the transaction will be cancelled.


### Create Payment with Payment Handle Token [POST]


+ Request Card Payment with Payment Handle (application/json)

    + Headers

            Authorization: "Basic YOUR-BASE64-ENCODED-API-KEY"
            

    
    + Body

            {
              "merchantRefNum": "463264632864832",
              "amount": 1295,
              "dupCheck": false,
              "settleWithAuth": false,
              "partialAuth": {
                "requested": false
              },
              "paymentHandleToken": "hjgds76432bjd",
              "customerIp": "204.91.0.12",
              "description": "Magazine subscription"
            }
            
+ Response 200 (application/json)

    + Body

            {
              "id": "14d380a4-e934-4cc8-b49e-a90cc082faa0",
              "merchantRefNum": "463264632864832",
              "amount": 1295,
              "settleWithAuth": false,
              "dupCheck": false,
              "partialAuth": {
                "requested": false
              },
              "availableToSettle": 1295,
              "description": "Magazine subscription",
              "paymentHandleToken": "hjgds76432bjd",
              "paymentHandle": {
                "id": "ph_TGFVRedfghy875redfghnED",
                "amount": "1295",
                "merchantRefNum": "84632642623",
                "currency": "CAD",
                "customerIp": "204.91.0.12",
                "paymentHandleToken": "hjgds76432bjd",
                "action": "REDIRECT",
                "customer": {
                  "firstName": "John",
                  "lastName": "Smith",
                  "dateOfBirth": {
                    "year": 1981,
                    "month": 10,
                    "day": 24
                  },
                  "email": "john.smith@email.com"
                },
                "billingAddress": {
                  "nickName": "Home",
                  "street": "100 Queen",
                  "street2": "Unit 200",
                  "city": "Toronto",
                  "zip": "M5H 2N2",
                  "country": "CA",
                  "state": "ON"
                },
                "paymentMethod": "CARD",
                "type": "SINGLE_USE",
                "card": {
                  "holderName": "John Smith",
                  "lastDigits": "1111",
                  "cardExpiry": {
                    "month": "12",
                    "year": "2020"
                  }
                }
              },
              "txnTime": "2014-12-14T15:12:18Z",
              "gatewayResponse": {
              "authCode": "1234567655",
              "avsResponse": "NOT_MATCH",
              "cvvVerification": "MATCHED"
              },
              "status": "COMPLETED"
            }

+ Request Payment with Skrill Payment Handle (application/json)

    + Headers

            Authorization: "Basic YOUR-BASE64-ENCODED-API-KEY"
    
    + Body

            {
              "merchantRefNum": "2632686382638",
              "amount": 1295,
              "settleWithAuth": false,
              "paymentHandleToken": "LTEyMzYzMjQ3ODg",
              "customerIp": "204.91.0.12",
              "description": "Magazine subscription"
            }
                        
+ Response 200 (application/json)

    + Body

            {
              "id": "a02e52c7-c991-4418-966a-b62989cb0eae",
              "merchantRefNum": "2632686382638",
              "amount": 1295,
              "customerIp": "192.0.126.111",
              "paymentHandleToken": "LTEyMzYzMjQ3ODg",
              "skrill": {
                "mandateReference": "1000-3232659874-65985698",
                "accountHolderName": "XYZ Company",
                "lastDigits": "66"
              },
              "profile": {
                "firstName": "Joe",
                "lastName": "Smith",
                "email": "Joe.Smith@hotmail.com"
              },
              "billingAddress": {
                "street": "Hoofdstraat 101",
                "city": "Heeswijk-Dinther",
                "country": "NL",
                "zip": "5233 HG",
                "phone": "06-12304567"
              },
              "txnTime": "2014-12-14T15:12:18Z",
              "currencyCode": "EUR",
              "status": "PENDING"
            }
            
+ Request (application/json)

    + Headers

            Authorization: "Basic YOUR-BASE64-ENCODED-API-KEY"
    
    + Body

            {
              "merchantRefNum": "merchant tokenization example-789",
              "amount": 1295,
              "settleWithAuth": false,
              "paymentHandleId": "LTEyMzYzMjQ3ODg",
              "customerIp": "204.91.0.12",
              "description": "Magazine subscription"
            }
                        
+ Response 200 (application/json)

    + Body

            {
              "id": "a02e52c7-c991-4418-966a-b62989cb0eae",
              "merchantRefNum": "ORDER_ID:1231",
              "amount": 10098,
              "customerIp": "192.0.126.111",
              "paymentHandleId": "LTEyMzYzMjQ3ODg",
              "skrill": {
                "mandateReference": "1000-3232659874-65985698",
                "accountHolderName": "XYZ Company",
                "lastDigits": "66"
              },
              "profile": {
                "firstName": "Joe",
                "lastName": "Smith",
                "email": "Joe.Smith@hotmail.com"
              },
              "billingAddress": {
                "street": "Hoofdstraat 101",
                "city": "Heeswijk-Dinther",
                "country": "NL",
                "zip": "5233 HG",
                "phone": "06-12304567"
              },
              "txnTime": "2014-12-14T15:12:18Z",
              "currencyCode": "EUR",
              "status": "PENDING"
            }
            
                        
+ Request (application/json)

    + Headers

            Authorization: "Basic YOUR-BASE64-ENCODED-API-KEY"
    
    + Body

            {
              "merchantRefNum": "merchant tokenization example-789",
              "amount": 1295,
              "paymentHandleId": "LTEyMzYzMjQ3ODg",
              "customerIp": "204.91.0.12",
              "description": "Magazine subscription"
            }
                        
+ Response 200 (application/json)

    + Body

            {
              "id": "a02e52c7-c991-4418-966a-b62989cb0eae",
              "merchantRefNum": "ORDER_ID:1231",
              "amount": 10098,
              "customerIp": "192.0.126.111",
              "paymentHandleId": "LTEyMzYzMjQ3ODg",
              "sepa": {
                "mandateReference": "1000-3232659874-65985698",
                "accountHolderName": "XYZ Company",
                "lastDigits": "66"
              },
              "profile": {
                "firstName": "Joe",
                "lastName": "Smith",
                "email": "Joe.Smith@hotmail.com"
              },
              "billingAddress": {
                "street": "Hoofdstraat 101",
                "city": "Heeswijk-Dinther",
                "country": "NL",
                "zip": "5233 HG",
                "phone": "06-12304567"
              },
              "txnTime": "2014-12-14T15:12:18Z",
              "currencyCode": "EUR",
              "status": "PENDING"
            }
            
            
### Get Payments [GET /v1/payments/{payment_id}]

Click on Get Payments above to see how to fetch the payments by payment_id.

+ Parameter

   + payment_id (String) - 86dcb68d-cbd0-4878-8da7-ffc0e6554513

+ Response 200 (application/json)

    + Body

            {
              "id": "14d380a4-e934-4cc8-b49e-a90cc082faa0",
              "merchantRefNum": "merchant tokenization example-789",
              "amount": 1295,
              "settleWithAuth": false,
              "dupCheck": false,
              "partialAuth": {
                "requested": false
              },
              "availableToSettle": 1295,
              "description": "Magazine subscription",
              "authCode": "1234567655",
              "paymentHandle": {
                "id": "ph_TGFVRedfghy875redfghnED",
                "amount": "1295",
                "merchantRefNum": "merchant tokenization example-789",
                "currency": "CAD",
                "customerIp": "204.91.0.12",
                "flow": "redirect",
                "customer": {
                  "firstName": "John",
                  "lastName": "Smith",
                  "dateOfBirth": {
                    "year": 1981,
                    "month": 10,
                    "day": 24
                  },
                  "email": "john.smith@email.com"
                },
                "billingAddress": {
                  "nickName": "Home",
                  "street": "100 Queen",
                  "street2": "Unit 200",
                  "city": "Toronto",
                  "zip": "M5H 2N2",
                  "country": "CA",
                  "state": "ON"
                },
                "paymentMethod": "CARD",
                "type": "SINGLE_USE",
                "card": {
                  "id": "paymentInstrumentId1",
                  "holderName": "John Smith",
                  "lastDigits": "1111",
                  "cardExpiry": {
                    "month": "12",
                    "year": "2020"
                  }
                }
              },
              "txnTime": "2014-12-14T15:12:18Z",
              "currencyCode": "CAD",
              "avsResponse": "MATCH",
              "cvvVerification": "NOT_PROCESSED",
              "status": "COMPLETED"
            }
            
### Get Payments by Merchant Reference number [GET /v1/payments?merchantRefNum={merchantRefNum_id}]

Click on above to fetch the payments by merchant refernce number.

+ Parameter

   + merchantRefNum_id : merchant tokenization example-789

+ Response 200 (application/json)

    + Body

            {
              "id": "14d380a4-e934-4cc8-b49e-a90cc082faa0",
              "merchantRefNum": "merchant tokenization example-789",
              "amount": 1295,
              "settleWithAuth": false,
              "dupCheck": false,
              "partialAuth": {
                "requested": false
              },
              "availableToSettle": 1295,
              "description": "Magazine subscription",
              "authCode": "1234567655",
              "paymentHandle": {
                "id": "ph_TGFVRedfghy875redfghnED",
                "amount": "1295",
                "merchantRefNum": "merchant tokenization example-789",
                "currency": "CAD",
                "customerIp": "204.91.0.12",
                "flow": "redirect",
                "customer": {
                  "firstName": "John",
                  "lastName": "Smith",
                  "dateOfBirth": {
                    "year": 1981,
                    "month": 10,
                    "day": 24
                  },
                  "email": "john.smith@email.com"
                },
                "billingAddress": {
                  "nickName": "Home",
                  "street": "100 Queen",
                  "street2": "Unit 200",
                  "city": "Toronto",
                  "zip": "M5H 2N2",
                  "country": "CA",
                  "state": "ON"
                },
                "paymentMethod": "CARD",
                "type": "SINGLE_USE",
                "card": {
                  "id": "paymentInstrumentId1",
                  "holderName": "John Smith",
                  "lastDigits": "1111",
                  "cardExpiry": {
                    "month": "12",
                    "year": "2020"
                  }
                }
              },
              "txnTime": "2014-12-14T15:12:18Z",
              "currencyCode": "CAD",
              "avsResponse": "MATCH",
              "cvvVerification": "NOT_PROCESSED",
              "status": "COMPLETED"
            }
            
# Group Settlement APIs

## Settlements [/v1/auths/{auth_id}/settlements]

Settlement with dupCheck and merchentRefNum

+ Parameter

    + auth_id : e3058030-1a0c-4b8a-b7f7-ceb79157df3f

### Post Settlement [POST]

- A regular Settlement, where the initial request was an Authorization that now has to be settled
- A partial Settlement, where only part of the initial Authorization is settled, leaving the balance to be settled later
- A Settlement that is split into multiple merchant accounts, for merchant accounts that are configured to do so

+ Request (application/json)

    + Headers

            Authorization: "Basic YOUR-BASE64-ENCODED-API-KEY"
            
    + Attributes(SettlementResponse)
    
    + Body

            {
              "merchantRefNum": "13995817730005399",
              "dupCheck": true
            }
                        
+ Response 200 (application/json)

    + Body

            {
              "id": "d1fb46ee-2736-4ef5-a724-f263ace75373",
              "merchantRefNum": "13995817730005399",
              "amount": 5500,
              "availableToRefund": 5500,
              "dupCheck": true,
              "txnTime": "2017-02-14T15:12:18Z",
              "status": "COMPLETED",
              "links": [
                {
                  "rel": "self",
                  "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/settlements/d1fb46ee-2736-4ef5-a724-f263ace75373"
                }
              ]
            }
            
+ Request (application/json)

    + Headers

            Authorization: "Basic YOUR-BASE64-ENCODED-API-KEY"
    
    + Body

            {
              "merchantRefNum": "13995817730005399",
              "amount": 2250,
              "dupCheck": true
            }


+ Response 200 (application/json)

    + Body

            {
              "id": "d1fb46ee-2736-4ef5-a724-f263ace75373",
              "merchantRefNum": "13995817730005399",
              "amount": 2250,
              "availableToRefund": 2250,
              "dupCheck": true,
              "txnTime": "2017-02-14T15:12:18Z",
              "status": "COMPLETED",
              "links": [
                {
                  "rel": "self",
                  "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/settlements/d1fb46ee-2736-4ef5-a724-f263ace75373"
                }
              ]
            }
            
### Cancel a Settlement [PUT /v1/settlement/{settlement_id}]

- Settlement with dupCheck and merchentRefNum
- Partial Settlement with amount in Request Body 

+ Parameter

    + settlement_id : `d1fb46ee-2736-4ef5-a724-f263ace75373`

+ Request (application/json)

    + Headers

            Authorization: "Basic YOUR-BASE64-ENCODED-API-KEY"
    
    + Body

            {
              "status": "CANCELLED"
            }
                        
+ Response 200 (application/json)

    + Body

            {
              "id": "d1fb46ee-2736-4ef5-a724-f263ace75373",
              "txnTime": "2017-02-14T15:12:18Z",
              "status": "CANCELLED",
              "links": [
                {
                  "rel": "self",
                  "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/settlements/d1fb46ee-2736-4ef5-a724-f263ace75373"
                }
              ]
            }

# Group Refund APIs

## Refunds [/v1/payments/{payments_id}/refunds]

The settlement details in case of Card payment method can be sent through Request Body

+ Parameter

    + payments_id : `6ddbc05a-ff40-4dc1-b2d3-f200934dfdde`

### Post Refund [POST]

- A regular Refund
- A Refund that is split into multiple merchant accounts, for merchant accounts that are configured to do so

+ Request (application/json)

    + Headers

            Authorization: "Basic YOUR-BASE64-ENCODED-API-KEY"
            
    + Attributes(RefundResponse)
    
    + Body

            {
              "merchantRefNum": "13995817730005399",
              "amount": 5500,
              "dupCheck": true
            }
                        
+ Response 200 (application/json)

    + Body

            {
              "id": "d1fb46ee-2736-4ef5-a724-f263ace75374",
              "merchantRefNum": "13995817730005399",
              "amount": 5500,
              "dupCheck": true,
              "txnTime": "2017-02-14T15:12:18Z",
              "status": "COMPLETED",
              "links": [
                {
                  "rel": "self",
                  "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/refunds/d1fb46ee-2736-4ef5-a724-f263ace75374"
                }
              ]
            }
            
### Cancel Refund [PUT /v1/refunds/{refund_id}]

Click on Cancel a Refund above to see how to submit a Cancel Refund request.

+ Parameter

    + refund_id : `d1fb46ee-2736-4ef5-a724-f263ace75374`
    
+ Request (application/json)

    + Headers

            Authorization: "Basic YOUR-BASE64-ENCODED-API-KEY"
    
    + Body

            {
              "status": "CANCELLED"
            }
                        
+ Response 200 (application/json)

    + Body

            {
              "id": "d1fb46ee-2736-4ef5-a724-f263ace75374",
              "txnTime": "2017-02-14T15:12:18Z",
              "status": "CANCELLED",
              "links": [
                {
                  "rel": "self",
                  "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/refunds/d1fb46ee-2736-4ef5-a724-f263ace75374"
                }
              ]
            }
            
### Get Refund [GET ]

+ Response 200 (application/json)

    + Body

            {
              "id": "d1fb46ee-2736-4ef5-a724-f263ace75374",
              "merchantRefNum": "13995817730005399",
              "amount": 5500,
              "dupCheck": true,
              "txnTime": "2017-02-14T15:12:18Z",
              "status": "PENDING",
              "splitpay": [
                {
                  "linkedAccount": "123124124",
                  "amount": 500
                }
              ],
              "links": [
                {
                  "rel": "self",
                  "href": "https://api.test.paysafe.com/cardpayments/v1/accounts/123456789/refunds/d1fb46ee-2736-4ef5-a724-f263ace75374"
                }
              ]
            }
         
# Group Standalone Credits APIs

## Standalone Credits [/v1/standalonecredits]

Standalone Credits allow merchants to issue credits to cardholders without requiring a previous Authorization/Settlement.

### Post Standalone Credit [POST]

- Credit with original Card information
- Credit with Payment Token


+ Request (application/json)

    + Headers

            Authorization: "Basic YOUR-BASE64-ENCODED-API-KEY"
            
    + Attributes (OriginalCreditResponse)
    
    + Body

            {
              "merchantRefNum": "13995817730005399",
              "amount": 1000,
              "dupCheck": "true",
              "card": {
                "cardNum": "4111111111111111",
                "cardExpiry": {
                  "month": 2,
                  "year": 2019
                }
              },
              "customerIp": "204.91.0.12",
              "description": "Winning payment from Loto",
              "accountId": "123456789"
            }         
+ Response 200 (application/json)

    + Body

            {
              "id": "86dcb68d-cbd0-4878-8da7-ffc0e6554513",
              "merchantRefNum": "13995817730005399",
              "txnTime": "2017-07-06T19:59:17Z",
              "status": "PENDING",
              "amount": 1000,
              "card": {
                "type": "VI",
                "lastDigits": "1111",
                "cardExpiry": {
                  "month": 2,
                  "year": 2019
                }
              },
              "profile": {
                "firstName": "Joe",
                "lastName": "Smith",
                "email": "Joe.Smith@canada.com"
              },
              "billingDetails": {
                "street": "100 Queen Street West",
                "city": "Toronto",
                "state": "ON",
                "country": "CA",
                "zip": "M5H2N2"
              },
              "customerIp": "204.91.0.12",
              "description": "Winning payment from Loto",
              "currencyCode": "CAD",
              "accountId": "123456789",
              "links": [
                {
                  "rel": "self",
                  "href": "https://api.test.paysafe.com/cardpayments/v1/standalonecredits/86dcb68d-cbd0-4878-8da7-ffc0e6554513"
                }
              ]
            }
            
+ Request (application/json)

    + Headers

            Authorization: "Basic YOUR-BASE64-ENCODED-API-KEY"
    
    + Body

            {
              "merchantRefNum": "merchant 07.05.17_16",
              "amount": 1000,
              "dupCheck": "true",
              "card": {
                "paymentToken": "LTEyMzYzMjQ3ODg"
              },
              "customerIp": "204.91.0.12",
              "description": "Winning payment from Loto",
              "accountId": "123456789"
            }  
            
+ Response 200 (application/json)

    + Body

            {
              "id": "86dcb68d-cbd0-4878-8da7-ffc0e6554513",
              "merchantRefNum": "merchant 07.05.17_16",
              "txnTime": "2017-07-06T19:59:17Z",
              "status": "PENDING",
              "amount": 1000,
              "card": {
                "type": "VI",
                "lastDigits": "1111",
                "cardExpiry": {
                  "month": 2,
                  "year": 2019
                }
              },
              "profile": {
                "firstName": "Joe",
                "lastName": "Smith",
                "email": "Joe.Smith@canada.com"
              },
              "billingDetails": {
                "street": "100 Queen Street West",
                "city": "Toronto",
                "state": "ON",
                "country": "CA",
                "zip": "M5H2N2"
              },
              "customerIp": "204.91.0.12",
              "description": "Winning payment from Loto",
              "currencyCode": "CAD",
              "accountId": "123456789",
              "links": [
                {
                  "rel": "self",
                  "href": "https://api.test.paysafe.com/cardpayments/v1/standalonecredits/86dcb68d-cbd0-4878-8da7-ffc0e6554513"
                }
              ]
            }
            
### Cancel Standalone Credit [PUT /v1/standalonecredits/{standalone_credit_id}]

Click on Cancel a Standalone Credit above to see how to submit a Cancel Standalone Credit request.

+ Parameter

    + standalone_credit_id : `86dcb68d-cbd0-4878-8da7-ffc0e6554513`
    

+ Request (application/json)

    + Headers

            Authorization: "Basic YOUR-BASE64-ENCODED-API-KEY"
    
    + Body

            {
              "status": "CANCELLED"
            }


+ Response 200 (application/json)

    + Body

            {
              "id": "86dcb68d-cbd0-4878-8da7-ffc0e6554513",
              "txnTime": "2017-02-14T15:12:18Z",
              "status": "CANCELLED",
              "links": [
                {
                  "rel": "self",
                  "href": "https://api.test.paysafe.com/cardpayments/v1/standalonecredits/86dcb68d-cbd0-4878-8da7-ffc0e6554513"
                }
              ]
            }
            

### Get Standalone Credit [GET /v1/standalonecredits/{standalone_credit_id}]

Click on Get Standalone Credit above to see how to look up a Standalone Credit request using the ID returned in the response to the original request.

+ Parameter

    + standalone_credit_id : `86dcb68d-cbd0-4878-8da7-ffc0e6554513`

+ Response 200 (application/json)

    + Body

            {
              "id": "86dcb68d-cbd0-4878-8da7-ffc0e6554513",
              "merchantRefNum": "merchant 07.05.17_16",
              "txnTime": "2017-07-06T19:59:17Z",
              "status": "PENDING",
              "amount": 1000,
              "card": {
                "type": "VI",
                "lastDigits": "1111",
                "cardExpiry": {
                  "month": 2,
                  "year": 2019
                }
              },
              "profile": {
                "firstName": "Joe",
                "lastName": "Smith",
                "email": "Joe.Smith@canada.com"
              },
              "billingDetails": {
                "street": "100 Queen Street West",
                "city": "Toronto",
                "state": "ON",
                "country": "CA",
                "zip": "M5H2N2"
              },
              "customerIp": "204.91.0.12",
              "description": "Winning payment from Loto",
              "currencyCode": "CAD",
              "accountId": "123456789",
              "links": [
                {
                  "rel": "self",
                  "href": "https://api.test.paysafe.com/cardpayments/v1/standalonecredits/86dcb68d-cbd0-4878-8da7-ffc0e6554513"
                }
              ]
            }
            
### Get Standalone Credit Using Merchant Reference Number  [GET /v1/standalonecredits?merchantRefNum={merchantRefNum}]

Click on Get Standalone Credit Using Merchant Reference Number above to see how to look up a Standalone Credit using the merchant reference number used in the original request.

+ Parameter

   + merchantRefNum : 13995817730005399

+ Response 200 (application/json)

    + Body

            {
               "standalonecredits": [
                {
                    "id": "86dcb68d-cbd0-4878-8da7-ffc0e6554513",
                    "merchantRefNum": "13995817730005399",
                    "txnTime": "2017-07-06T19:59:17Z",
                    "status": "PENDING",
                    "amount": 1000,
                    "card": {
                        "type": "VI",
                        "lastDigits": "1111",
                        "cardExpiry": {
                        "month": 2,
                        "year": 2019
                    }
                },
                "profile": {
                    "firstName": "Joe",
                    "lastName": "Smith",
                    "email": "Joe.Smith@canada.com"
                },
                "billingDetails": {
                    "street": "100 Queen Street West",
                    "city": "Toronto",
                    "state": "ON",
                    "country": "CA",
                    "zip": "M5H2N2"
                },
                "customerIp": "204.91.0.12",
                "description": "Winning payment from Loto",
                "currencyCode": "CAD",
                "accountId": "123456789",
                "links": [
                   {
                    "rel": "self",
                    "href": "https://api.test.paysafe.com/cardpayments/v1/standalonecredits/86dcb68d-cbd0-4878-8da7-ffc0e6554513"
                }
                ]
                 }
                ],
                "links": [
                 {
                    "rel": "self",
                    "href": "https://api.test.paysafe.com/cardpayments/v1/standalonecredits?merchantRefNum=merchant 07.05.17_16&limit=2&offset=2&startDate=2017-01-14T15:12:18Z&endDate=2017-04-04T15:12:18Z"
                }
            ]
            }
            


# Group Original Credits APIs

## Original Credits [/v1/originalcredits]

Original Credits allow merchants with specific merchant category codes (MCCs) to issue winnings as credits to cardholders, without requiring a previous Authorization/Settlement.

### Original Credit [POST]

- An Original Credit request using card information.
- An Original Credit request using a payment token.

+ Request (application/json)

    + Headers

            Authorization: "Basic YOUR-BASE64-ENCODED-API-KEY"
    
    + Attributes (OriginalCreditResponse)
    
    + Body

            {
              "merchantRefNum": "13995817730005399",
              "amount": 1000,
              "dupCheck": "true",
              "card": {
                "cardNum": "4111111111111111",
                "cardExpiry": {
                  "month": 2,
                  "year": 2019
                }
              },
              "customerIp": "204.91.0.12",
              "description": "Winning payment from Loto",
              "accountId": "123456789"
            }         
+ Response 200 (application/json)

    + Body

            {
              "id": "86dcb68d-cbd0-4878-8da7-ffc0e6554513",
              "merchantRefNum": "13995817730005399",
              "txnTime": "2017-07-06T19:59:17Z",
              "status": "PENDING",
              "amount": 1000,
              "card": {
                "type": "VI",
                "lastDigits": "1111",
                "cardExpiry": {
                  "month": 2,
                  "year": 2019
                }
              },
              "profile": {
                "firstName": "Joe",
                "lastName": "Smith",
                "email": "Joe.Smith@canada.com"
              },
              "billingDetails": {
                "street": "100 Queen Street West",
                "city": "Toronto",
                "state": "ON",
                "country": "CA",
                "zip": "M5H2N2"
              },
              "customerIp": "204.91.0.12",
              "description": "Winning payment from Loto",
              "currencyCode": "CAD",
              "accountId": "123456789",
              "links": [
                {
                  "rel": "self",
                  "href": "https://api.test.paysafe.com/cardpayments/v1/originalcredits/86dcb68d-cbd0-4878-8da7-ffc0e6554513"
                }
              ]
            }
            
+ Request (application/json)

    + Headers

            Authorization: "Basic YOUR-BASE64-ENCODED-API-KEY"
    
    + Body

            {
              "merchantRefNum": "13995817730005399",
              "amount": 1000,
              "dupCheck": "true",
              "card": {
                "paymentToken": "LTEyMzYzMjQ3ODg"
              },
              "customerIp": "204.91.0.12",
              "description": "Winning payment from Loto",
              "accountId": "123456789"
            }  
            
+ Response 200 (application/json)

    + Body

            {
              "id": "86dcb68d-cbd0-4878-8da7-ffc0e6554513",
              "merchantRefNum": "13995817730005399",
              "txnTime": "2017-07-06T19:59:17Z",
              "status": "PENDING",
              "amount": 1000,
              "card": {
                "type": "VI",
                "lastDigits": "1111",
                "cardExpiry": {
                  "month": 2,
                  "year": 2019
                }
              },
              "profile": {
                "firstName": "Joe",
                "lastName": "Smith",
                "email": "Joe.Smith@canada.com"
              },
              "billingDetails": {
                "street": "100 Queen Street West",
                "city": "Toronto",
                "state": "ON",
                "country": "CA",
                "zip": "M5H2N2"
              },
              "customerIp": "204.91.0.12",
              "description": "Winning payment from Loto",
              "currencyCode": "CAD",
              "accountId": "123456789",
              "links": [
                {
                  "rel": "self",
                  "href": "https://api.test.paysafe.com/cardpayments/v1/originalcredits/86dcb68d-cbd0-4878-8da7-ffc0e6554513"
                }
              ]
            }



### Cancel an Original Credit [PUT /v1/originalcredits/{original_credit_id}]

Click on Cancel an Original Credit above to see how to submit a Cancel Original Credit request.

+ Parameter

   + original_credit_id : `86dcb68d-cbd0-4878-8da7-ffc0e6554513` - This is the ID returned in the response to the Original Credit request. Example: 86dcb68d-cbd0-4878-8da7-ffc0e6554513.

+ Request (application/json)

    + Headers

            Authorization: "Basic YOUR-BASE64-ENCODED-API-KEY"
    
    + Body

            {
              "status": "CANCELLED"
            }


+ Response 200 (application/json)

    + Body

            {
              "id": "86dcb68d-cbd0-4878-8da7-ffc0e6554513",
              "txnTime": "2017-02-14T15:12:18Z",
              "status": "CANCELLED",
              "links": [
                {
                  "rel": "self",
                  "href": "https://api.test.paysafe.com/cardpayments/v1/originalcredits/86dcb68d-cbd0-4878-8da7-ffc0e6554513"
                }
              ]
            }
            

### Get Original Credit [GET /v1/originalcredits/{original_credit_id}]

Click on Get Original Credit above to see how to look up an Original Credit request using the ID returned in the response to the original request.

+ Parameter

   + original_credit_id : `86dcb68d-cbd0-4878-8da7-ffc0e6554513` - This is the ID returned in the response to the Original Credit request. Example: 86dcb68d-cbd0-4878-8da7-ffc0e6554513.


+ Response 200 (application/json)

    + Body

            {
              "id": "86dcb68d-cbd0-4878-8da7-ffc0e6554513",
              "merchantRefNum": "13995817730005399",
              "txnTime": "2017-07-06T19:59:17Z",
              "status": "PENDING",
              "amount": 1000,
              "card": {
                "type": "VI",
                "lastDigits": "1111",
                "cardExpiry": {
                  "month": 2,
                  "year": 2019
                }
              },
              "profile": {
                "firstName": "Joe",
                "lastName": "Smith",
                "email": "Joe.Smith@canada.com"
              },
              "billingDetails": {
                "street": "100 Queen Street West",
                "city": "Toronto",
                "state": "ON",
                "country": "CA",
                "zip": "M5H2N2"
              },
              "customerIp": "204.91.0.12",
              "description": "Winning payment from Loto",
              "currencyCode": "CAD",
              "accountId": "123456789",
              "links": [
                {
                  "rel": "self",
                  "href": "https://api.test.paysafe.com/cardpayments/v1/originalcredits/86dcb68d-cbd0-4878-8da7-ffc0e6554513"
                }
              ]
            }
            
### Get Original Credit Using Merchant Reference Number [GET /v1/originalcredits?merchantRefNum={merchantRefNum}]

Click on Get Original Credit Using Merchant Reference Number above to see how to look up an Original Credit request using the merchant reference number used in the original request.

+ Parameter

   + merchantRefNum : 13995817730005399 - This is the merchant reference number created by the merchant and submitted as part of the request. 

+ Response 200 (application/json)
  
   + Body

            {
               "originalcredits": [
                {
                    "id": "86dcb68d-cbd0-4878-8da7-ffc0e6554513",
                    "merchantRefNum": "13995817730005399",
                    "txnTime": "2017-07-06T19:59:17Z",
                    "status": "PENDING",
                    "amount": 1000,
                    "card": {
                        "type": "VI",
                        "lastDigits": "1111",
                        "cardExpiry": {
                        "month": 2,
                        "year": 2019
                    }
                },
                "profile": {
                    "firstName": "Joe",
                    "lastName": "Smith",
                    "email": "Joe.Smith@canada.com"
                },
                "billingDetails": {
                    "street": "100 Queen Street West",
                    "city": "Toronto",
                    "state": "ON",
                    "country": "CA",
                    "zip": "M5H2N2"
                },
                "customerIp": "204.91.0.12",
                "description": "Winning payment from Loto",
                "currencyCode": "CAD",
                "accountId": "123456789",
                "links": [
                   {
                    "rel": "self",
                    "href": "https://api.test.paysafe.com/cardpayments/v1/originalcredits/86dcb68d-cbd0-4878-8da7-ffc0e6554513"
                }
                ]
                 }
                ],
                "links": [
                 {
                    "rel": "self",
                    "href": "https://api.test.paysafe.com/cardpayments/v1/originalcredits?merchantRefNum=merchant 07.05.17_16&limit=2&offset=2&startDate=2017-01-14T15:12:18Z&endDate=2017-04-04T15:12:18Z"
                }
            ]
            }




# Group Customer APIs

## Create Customer [/v1/customers]

### Create Customer Profile [POST]

+ Request (application/json)

    + Headers

            Authorization: "Basic YOUR-BASE64-ENCODED-API-KEY"
    
    + Body

            {
                "firstName": "John",
                "lastName": "Smith",
                "phone" : "123-456-7890",
                "dateOfBirth": {
                    "year": 1981,
                    "month": 10,
                    "day": 24
                },
                "address": {
                    "nickName": "Home",
                    "street": "100 Queen",
                    "street2": "Unit 200",
                    "city": "Toronto",
                    "zip": "M5H 2N2",
                    "country": "CA",
                    "state": "ON"
                },
                "email": "john.smith@email.com"
            }

+ Response 200 (application/json)

    + Body

            {
                "customerId": "Gt56fR6",
                "firstName": "John",
                "lastName": "Smith",
                "phone" : "123-456-7890",
                "dateOfBirth": {
                    "year": 1981,
                    "month": 10,
                    "day": 24
                },
                "address": {
                    "addressId": "DF45FDtrR",
                    "nickName": "Home",
                    "street": "100 Queen",
                    "street2": "Unit 200",
                    "city": "Toronto",
                    "zip": "M5H 2N2",
                    "country": "CA",
                    "state": "ON"
                },
                "email": "john.smith@email.com"
            }

## Single User Customer Tokens [/v1/singleusecustomertokens]

### Create Single Use Customer Tokens [POST]

The API allows creation of single use customer token needed for cases where saved payment handles for a customer needs to be displayed in UI.

+ Request (application/json)

    + Headers

            Authorization: "Basic YOUR-BASE64-ENCODED-API-KEY"
    
    + Body

            {
               "customerId" : "e979132e-a1f7-454b-a764-2aada299b3be",
               "paymentTypes" : [ "CARD", "ACH"]
            }


+ Response 200 (application/json)

    + Body

            {
             "id" : "86dcb68d-cbd0-4878-8da7-ffc0e6554513",     
             "customerId" : "e979132e-a1f7-454b-a764-2aada299b3be",
             "paymentTypes" : [ "CARD", "ACH"],
             "timeToLiveSeconds" : "899",
             "status" : "ACTIVE",
             "merchantCustomerId" : "mycustomer1",
             "locale" : "en_US",
             "firstName" : "John",
             "lastName" : "Smith",
             "email" : "john.smith@somedomain.com",
             "phone" : "713-444-5555",
             "addresses": [
                {
                  "id": "6a275b7c-6f11-4ed1-ae77-21071724574a",
                  "status": "ACTIVE",
                  "nickName": "Home",
                  "street": "100 Queen",
                  "street2": "Unit 201",
                  "city": "Toronto",
                  "zip": "M5H 2N2",
                  "country": "CA",
                  "state": "ON",
                  "recipientName": "Jane Smith",
                  "phone": "647-788-3901"
                }
              ],
             "paymentHandles" : [
              {
                "id" : "52c54707-a536-4c3d-b2e9-ebdba8c1bd3e",
                "timeToLiveSeconds" : "899",
                "usage": "LOOKUP",
                "paymentType": "CARD",
                "paymentHandleToken" : "hdhfsafhdfsahg",
                "card": {
                    "lastDigits": "1111",
                    "cardExpiry": {
                        "month" : "12",
                        "year" : "2020"
                    },
                    "holderName": "TEST CUSTOMER"
                },
                "billingAddressId": "6a275b7c-6f11-4ed1-ae77-21071724574a"
             }]
            }

### Get Saved Payment Handles using single use Customer Token Id [GET /v1/singleusecustomertokens/{id}]

The operation allows look up of saved payment handles using a single use customer token. The payment handles are created with usage set to LOOKUP in a PENDING state.
The payment handles returned can be converted into a single Use payment handle when a user clicks on the pay button and the flow continues as with a non-saved flow.

Note: This API will be accessible with public API key. 

+ Parameter

   + id : `86dcb68d-cbd0-4878-8da7-ffc0e6554513` 


+ Response 200 (application/json)

    + Body
            
            {
             "id" : "86dcb68d-cbd0-4878-8da7-ffc0e6554513",     
             "customerId" : "e979132e-a1f7-454b-a764-2aada299b3be",
             "paymentTypes" : [ "CARD", "ACH"],
             "timeToLiveSeconds" : "899",
             "status" : "ACTIVE",
             "merchantCustomerId" : "mycustomer1",
             "locale" : "en_US",
             "firstName" : "John",
             "lastName" : "Smith",
             "email" : "john.smith@somedomain.com",
             "phone" : "713-444-5555",
             "addresses": [
                {
                  "id": "6a275b7c-6f11-4ed1-ae77-21071724574a",
                  "status": "ACTIVE",
                  "nickName": "Home",
                  "street": "100 Queen",
                  "street2": "Unit 201",
                  "city": "Toronto",
                  "zip": "M5H 2N2",
                  "country": "CA",
                  "state": "ON",
                  "recipientName": "Jane Smith",
                  "phone": "647-788-3901"
                }
              ],
             "paymentHandles" : [
              {
                "id" : "52c54707-a536-4c3d-b2e9-ebdba8c1bd3e",
                "timeToLiveSeconds" : "899",
                "usage": "LOOKUP",
                "paymentType": "CARD",
                "paymentHandleToken" : "hdhfsafhdfsahg",
                "card": {
                    "lastDigits": "1111",
                    "cardExpiry": {
                        "month" : "12",
                        "year" : "2020"
                    },
                    "holderName": "TEST CUSTOMER"
                },
                "billingAddressId": "6a275b7c-6f11-4ed1-ae77-21071724574a"
             }]
            }